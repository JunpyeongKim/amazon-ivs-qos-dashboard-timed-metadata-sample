swagger: "2.0"
info:
  description: "StarfruitQos API Gateway for ingesting events"
  title: "EventIngestEndpoint"
basePath: "/prod"
schemes:
- "https"
paths:
  /streams:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-integration:
        credentials: !Sub "arn:aws:iam::${AWS::AccountId}:role/apigAwsProxyRole"
        uri: !Sub "arn:aws:apigateway:${AWS::Region}:firehose:action/PutRecordBatch"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\n    \"DeliveryStreamName\": \"$input.path('$.DeliveryStreamName')\"\
            ,\n    \"Records\": [\n       #foreach($elem in $input.path('$.Records'))\n\
            \          {\n            \"Data\": \"$util.base64Encode($elem.Data)\"\
            \n          }#if($foreach.hasNext),#end\n        #end\n    ]\n}"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        type: "aws"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
